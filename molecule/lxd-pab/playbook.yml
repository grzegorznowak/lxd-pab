---

### CORE PROVISIONING ###
- name: Converge common for all
  hosts: all
  vars:
    nix_user: nix
    pab_sources: "/home/{{ nix_user }}/pab"
    nix_source_file: "/home/nix/.nix-profile/etc/profile.d/nix.sh"

    # which tag to git checkout to when converging the PAB
    default_pab_commit: 7f53f18dfc788bf6aa929f47d840efa1247e11fd

  pre_tasks:
    - name: "Add the {{ nix_user }} user"
      ansible.builtin.user:
        name: "{{ nix_user }}"
        comment: "{{ nix_user }}"
        shell: /bin/bash
        home: "/home/{{ nix_user }}"

  post_tasks:

    - name: "Add user {{ nix_user }} to sudo"
      lineinfile:
        path: "/etc/sudoers.d/{{ nix_user }}"
        line: '{{ nix_user }} ALL=(ALL) NOPASSWD: ALL'
        state: present
        mode: 0440
        create: yes
        validate: 'visudo -cf %s'

    - name: Set includedir in sudoers
      lineinfile:
        dest: /etc/sudoers
        line: "#includedir /etc/sudoers.d"
        state: present
        validate: "/usr/sbin/visudo -cf %s"

    - name: Update bashrc for the nix user
      lineinfile:
        dest: "/home/{{ nix_user }}/.bashrc"
        line: "source {{ nix_source_file }}"
        regexp: "^source /home/nix/"
        owner: "{{ nix_user }}"
        state: present
        insertafter: EOF
        create: true

    - name: Change the ownership of the /nix folder for the nix user
      file:
        path: /nix
        owner: "{{ nix_user }}"
        mode: '0744'

    - name: Add IOHK binary caches
      blockinfile:
        path: /etc/nix/nix.conf
        create: true
        block: |-
          experimental-features = nix-command
          substituters        = https://hydra.iohk.io https://iohk.cachix.org https://cache.nixos.org/
          trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

    - name: Chackout the PAB repo
      git:
        repo: https://github.com/input-output-hk/plutus-apps
        dest: "{{ pab_sources }}"
        version: "{{ lookup('env', 'PAB_COMMIT') | default(default_pab_commit, true) }}"
        force: true
      become: true
      become_user: "{{ nix_user }}"

    - name: Make plutus playground not be using SSL
      replace:
        path: "{{ pab_sources }}/plutus-playground-client/webpack.config.js"
        regexp: "https: true"
        replace: "https: false"

    - name: Make plutus playground listen on the public interface
      lineinfile:
        path: "{{ pab_sources }}/plutus-playground-client/webpack.config.js"
        regexp: 'host: "0\.0\.0\.0",'
        insertafter: 'port: 8009,'
        line: 'host: "0.0.0.0",'

    - name: Build the PAB library
      shell: >-
        source {{ nix_source_file }} 
        && nix build -f default.nix plutus-apps.haskell.packages.plutus-pab.components.library
      become: true
      become_user: "{{ nix_user }}"
      args:
        executable: /bin/bash
        chdir: "{{ pab_sources }}"

    - name: Build the Playground
      shell: >-
        source {{ nix_source_file }} 
        && nix-build -A plutus-playground.server
      become: true
      become_user: "{{ nix_user }}"
      args:
        executable: /bin/bash
        chdir: "{{ pab_sources }}"

    - name: Bootstrap the nix-shell
      shell: >-
        source {{ nix_source_file }} 
        && nix-shell
      become: true
      become_user: "{{ nix_user }}"
      args:
        executable: /bin/bash
        chdir: "{{ pab_sources }}"

  roles:
    - ableton.nix


- name: Converge cardano-node with testnet
  hosts: all
  vars:
    cardano_user: nix
    cardano_group: cardano
    cardano_install_method: dist
    cardano_home_directory: "/home/{{ cardano_user }}"
    cardano_wallets:
      - &pab_wallet pab
  roles:
    - grzegorznowak.cardano_node

  post_tasks:

    - set_fact:
        wallet_to_check: *pab_wallet
        lovelace_needed: 100000000  # 100 ADA

    - name: Wait until cardano node is fully synced against the testnet
      assert_cardano_synced:
        cardano_node_socket: "{{ cardano_node_socket }}"
        cardano_bin_path: "{{ cardano_bin_path }}"
        active_network: "{{ active_network }}"
        testnet_magic: "{{ network_magic }}"  # only used on testnet
      retries: 60  # wait up to 4h for full sync
      delay: 240
      become: true
      become_user: "{{ cardano_user }}"
      register: sync_check_result
      until: sync_check_result.progress | int == 100

    - name: Collect wallets
      cardano_wallet:
        cardano_bin_path: "{{ cardano_bin_path }}"
        name: "{{ wallet_to_check }}"
        active_network: "{{ active_network }}"
        testnet_magic: "{{ network_magic }}"  # only used on testnet
      become: true
      become_user: "{{ cardano_user }}"
      register: wallet_results

    - name: Address Info
      debug:
        msg: "Send at least 100 ADA via a test faucet to this address: {{ wallet_results['wallets_addresses'][wallet_to_check] }}"
      changed_when: true

    - name: Make sure we have some Lovelace
      assert_address_funded:
        cardano_node_socket: "{{ cardano_node_socket }}"
        cardano_bin_path: "{{ cardano_bin_path }}"
        active_network: "{{ active_network }}"
        testnet_magic: "{{ network_magic }}"  # only used on testnet
        expected_lovelace: "{{ lovelace_needed }}"
        address: "{{ wallet_results['wallets_addresses'][wallet_to_check] }}"
      retries: 30
      delay: 60    # wait up to 30min for tokens to arrive
      become: true
      become_user: "{{ cardano_user }}"
      register: lovelace_result
      until: lovelace_result.lovelace | int >= lovelace_needed
  tags:
    - never
    - with_cardano_testnet


- name: Converge cardano-node in devnet mode
  hosts: all
  vars:
    cardano_user: nix
    active_network: dev
    cardano_group: cardano
    cardano_install_method: dist
  roles:
    - grzegorznowak.cardano_node

  tags:
    - never
    - with_cardano_devnet
